setwd("~/TMU-GIDS/大數據統計與預測/第二章及第三章作業")
library(readxl)
library(ggplot2)
library(ggrepel)
library(data.table)
file <- read_excel("C2_13.xlsx")
colnames(file) = c('C', 'Smokers', 'NonSmokers')
View(file)
library(dplyr)
library(magrittr)
file = file %>% separate(C, c("new_col","new_col_2"),"-")
x<-input_list(5)
y<-input_list(5)
class_interval <- function(list_1, list_2){
list_3 <- round((list_1 + list_2)/2)
return(list_3)
}
t<-class_interval(x,y)
t
hist(t)
r <- c(4,2,7,8,1)
hist(t,r)
plot(t)
plot(t,r)
boxplot(t,
main = "Number of 'list' distribution",
xlab = "Number",
ylab = "list",
col = "powderblue",
border = "blue",
horizontal = TRUE,
notch = TRUE
)
boxplot(x,
main = "Number of 'list' distribution",
xlab = "Number",
ylab = "list",
col = "powderblue",
border = "blue",
horizontal = TRUE,
notch = TRUE
)
boxplot(li,
main = "Number of 'list' distribution",
xlab = "Number",
ylab = "list",
col = "powderblue",
border = "blue",
horizontal = TRUE,
notch = TRUE
)
hist(t,r)
file <- read_excel("Table B.3_nurshome.xlsx")
B <- file[which.max(file$resident),]
S <- file[which.min(file$resident),]
View(B)
p <- ggplot(file, aes(resident, fill = cut(resident, 100)))+
geom_histogram(show.legend = FALSE)+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Number of nursing house resident(hist)")
p
hist(file$resident)
summary(file$resident)
library(readxl)
library(ggplot2)
library(ggrepel)
library(data.table)
library(dplyr)
library(magrittr)
file <- read_excel("Table B.1_serzinc.xlsx")
summary(file$zinc)
sd(file$zinc)
max(file$zinc)-min(file$zinc)
IQR(file$zinc)
temp<-input_list(10)
temp
as.numeric(names(table(temp)))[which.max(table(temp))]
cv(temp)
rsd(temp)
100*sd(temp)/mean(temp)
temp
temp<-input_list(10)
100*sd(temp)/mean(temp)
sd(temp)/mean(temp)
summary_data <- function(data){
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
summary(data)
# sd
sd(data)
# range
max(data)-min(data)
# IQR
IQR(data)
# Mode
as.numeric(names(table(data)))[which.max(table(data))]
# Cv
100*sd(data)/mean(data)
}
summary_data(temp)
mod(temp)
summary_data <- function(data){
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
summary(data)
# sd
s <- sd(data)
# range
ran <- max(data)-min(data)
# IQR
iqr <- IQR(data)
# Mode
Mod <- as.numeric(names(table(data)))[which.max(table(data))]
# Cv
CV <- 100*sd(data)/mean(data)
cat(summary(data), '\n', 'sd :',s , ';range :', ran, ';iqr :', iqr, ';mode', Mod, ';CV', CV)
}
summary_data(temp)
summary_data <- function(data){
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
summ <- summary(data)
# sd
s <- sd(data)
# range
ran <- max(data)-min(data)
# IQR
iqr <- IQR(data)
# Mode
Mod <- as.numeric(names(table(data)))[which.max(table(data))]
# Cv
CV <- 100*sd(data)/mean(data)
print(summ)
cat( 'sd :',s , ';range :', ran, ';iqr :', iqr, ';mode', Mod, ';CV', CV)
}
summary_data(temp)
summary_data <- function(data){
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
summ <- summary(data)
# sd
s <- sd(data)
# range
ran <- max(data)-min(data)
# IQR
iqr <- IQR(data)
# Mode
Mod <- as.numeric(names(table(data)))[which.max(table(data))]
# Cv
CV <- 100*sd(data)/mean(data)
print(summ)
cat('\n', 'sd :',s , ';range :', ran, ';iqr :', iqr, ';mode', Mod, ';CV', CV)
}
summary_data(temp)
empirical_value <- function(data, num){
upper <- mean(data)+num*sd(data)
lower <- mean(data)-num*sd(data)
cat(upper, ',',lower)
}
empirical_value(temp)
empirical_value(temp, 1)
temp
sd(temp)
mean(temp)
empirical_value(temp, 2)
chebyshev_inequality <- function(k){
interval <- 100*(1-(1/k)^2)
cat('At least ', interval, '% ', 'of data will lie within + -', k, ' standard deviation of their mean')
}
chebyshev_inequality(2)
chebyshev_inequality(3)
chebyshev_inequality(4)
0.142*0.051
0.142+0.051-0.031
probability_1 <- function(a, b, x){
inter_both <- a+b-x
cat('The both or intersection is : ',inter_both)
}
probability_1(0.142, 0.051,0.031)
probability_1 <- function(a, b, x){
inter_both <- a+b-x
cat('The answer is : ',inter_both)
}
probability_1(0.142, 0.051,0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
# if x is intersection
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',mconditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
# if x is intersection
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
# if x is intersection
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
print('if x is intersection...')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
cat('if x is intersection... ', '\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
cat('if input is intersection... ', '\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, 'if probability under b, probability a : ',conditional_prob_a)
}
probability_1()
probability_1(0.142, 0.051, 0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
cat('if input is intersection... ', '\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, '   ;if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
# If not independent, we shall calculate the both and intersection manually
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
cat('if input is intersection... ', '\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('if probability under b, probability a :',conditional_prob_b, ' ;if probability under b, probability a : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
# if x is intersection
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('event A occurs given that event B occurs :',mconditional_prob_b, 'event B occurs given that event A occurs : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
# if x is intersection
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('event A occurs given that event B occurs :',conditional_prob_b, 'event B occurs given that event A occurs : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
cat('if input is intersection ... ','\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('event A occurs given that event B occurs :',conditional_prob_b, ' ;event B occurs given that event A occurs : ',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both)
cat('if input is intersection ... ','\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('event A occurs given that event B occurs :',conditional_prob_b, ' ;event B occurs given that event A occurs :',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
probability_1<- function(a, b, x){
# x can be either both or intersection
inter_both <- a+b-x
cat('The answer (both/inter) is : ',inter_both, '\n')
cat('if input is intersection ... ','\n')
# if probability under b, probability a?
conditional_prob_b <- x/b
# if probability under b, probability a?
conditional_prob_a <- x/a
cat('event A occurs given that event B occurs :',conditional_prob_b, ' ;event B occurs given that event A occurs :',conditional_prob_a)
}
probability_1(0.142, 0.051, 0.031)
x = c(12)
sum(x)
conditional_probability <- function(list_a, list_b){
cat('event A occurs given that event B occurs :',sum(list_a), ' ;event B occurs given that event A occurs :',sum(list_b))
}
a = input_list(4)
b = input_list(8)
conditional_probability(a,b)
# input values as a numeric list
input_list <- function(num) {
l = c()
for (i in c(1:num)) {
question <- as.numeric(readline(prompt="Enter number as numerical list: "))
l <- append(l,question)
}
return(l)
}
a = input_list(4)
b = input_list(8)
conditional_probability(a,b)
0.238/0.392
0.238/0.141
551/933
(0.8230088*(1-0.10))/((0.8230088*(1-0.10))+((1-0.6278586)*0.10))
(0.823*(1-0.10))/((0.823*(1-0.10))+((1-0.628)*0.10))
1-0.628
1-0.10
(0.823*0.90/((0.823*0.90+(0.372*0.10))
(0.823*0.90)/((0.823*0.90)+(0.372*0.10))
(0.85*0.025)/((0.85*0.025)+(0.20*(1-0.025)))
(0.85*0.0025)/((0.85*0.0025)+(0.20*(1-0.0025)))
diagnostic_test_table <- function(a,b,c,d,e){
sen = a/(a+b)
sp = d/(c+d)
fn = 1 - Sensitive
fp = 1 - Specificity
pp = sen*e/((sen*e)+(1-sp)*(1-e))
pn = sp*(1-e)/(sp*(1-e)+(1-sen)*e)
}
diagnostic_test_table <- function(a,b,c,d,e){
sen = a/(a+b)
sp = d/(c+d)
fn = 1 - Sensitive
fp = 1 - Specificity
pp = sen*e/((sen*e)+(1-sp)*(1-e))
pn = sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, 'Specificity :', sp, 'FN :', fn, 'FP', fp, 'P+', pp, 'P-', pn, sep="\n")
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen = a/(a+b)
sp = d/(c+d)
fn = 1 - Sensitive
fp = 1 - Specificity
pp = sen*e/((sen*e)+(1-sp)*(1-e))
pn = sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, 'Specificity :', sp, 'FN :', fn, 'FP', fp, 'P+', pp, 'P-', pn, sep="\n")
}
diagnostic_test_table(302,179,80,372,0.10)
a =302
b=179
a/(a+b)
diagnostic_test_table <- function(a,b,c,d,e){
sen = a/(a+b)
sp = d/(c+d)
fn = 1 - Sensitive
fp = 1 - Specificity
pp = sen*e/((sen*e)+(1-sp)*(1-e))
pn = sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, 'Specificity :', sp, 'FN :', fn, 'FP', fp, 'P+', pp, 'P-', pn)
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen <- a/(a+b)
sp <- d/(c+d)
fn <- 1 - Sensitive
fp <- 1 - Specificity
pp <- sen*e/((sen*e)+(1-sp)*(1-e))
pn <- sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, 'Specificity :', sp, 'FN :', fn, 'FP', fp, 'P+', pp, 'P-', pn)
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen <- a/(a+b)
sp <- d/(c+d)
fn <- 1 - sen
fp <- 1 - sp
pp <- sen*e/((sen*e)+(1-sp)*(1-e))
pn <- sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, 'Specificity :', sp, 'FN :', fn, 'FP', fp, 'P+', pp, 'P-', pn, sep = '\n')
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen <- a/(a+b)
sp <- d/(c+d)
fn <- 1 - sen
fp <- 1 - sp
pp <- sen*e/((sen*e)+(1-sp)*(1-e))
pn <- sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, '\n', 'Specificity :', sp, '\n', 'FN :', fn, '\n', 'FP', fp, '\n', 'P+ :', pp, '\n', 'P- :', pn)
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen <- a/(a+b)
sp <- d/(c+d)
fn <- 1 - sen
fp <- 1 - sp
pp <- sen*e/((sen*e)+(1-sp)*(1-e))
pn <- sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat('Sensitive :', sen, '\n', 'Specificity :', sp, '\n', 'FN :', fn, '\n', 'FP :', fp, '\n', 'P+ :', pp, '\n', 'P- :', pn)
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_test_table <- function(a,b,c,d,e){
sen <- a/(a+b)
sp <- d/(c+d)
fn <- 1 - sen
fp <- 1 - sp
pp <- sen*e/((sen*e)+(1-sp)*(1-e))
pn <- sp*(1-e)/(sp*(1-e)+(1-sen)*e)
cat(' Sensitive :', sen, '\n', 'Specificity :', sp, '\n', 'FN :', fn, '\n', 'FP :', fp, '\n', 'P+ :', pp, '\n', 'P- :', pn)
}
diagnostic_test_table(302,179,80,372,0.10)
diagnostic_pp <- function(pp, pn, e){
k1 <- pp*(1-e)/e(1-pp)
k2 <- pn*e/((1-e)*(1-pp))
sen <- (k1-k1*k2)/(1-k1*k2)
sp <- (k2-k1*k2)/(1-k1*k2)
cat(' Sensitive :', sen, '\n', 'Specificity :', sp)
}
diagnostic_pp(0.28 ,0.952,0.1)
diagnostic_pp <- function(pp, pn, e){
k1 <- pp*(1-e)/e*(1-pp)
k2 <- pn*e/((1-e)*(1-pp))
sen <- (k1-k1*k2)/(1-k1*k2)
sp <- (k2-k1*k2)/(1-k1*k2)
cat(' Sensitive :', sen, '\n', 'Specificity :', sp)
}
diagnostic_pp(0.28 ,0.952,0.1)
diagnostic_pp(0.28 ,0.952,0.1)
diagnostic_pp <- function(pp, pn, e){
k1 <- (pp*(1-e))/(e*(1-pp))
k2 <- (pn*e)/((1-e)*(1-pn))
sen <- (k1-k1*k2)/(1-k1*k2)
sp <- (k2-k1*k2)/(1-k1*k2)
cat(' Sensitive :', sen, '\n', 'Specificity :', sp)
}
diagnostic_pp(0.28 ,0.952,0.1)
diagnostic_pp(0.28272,0.9521621,0.1)
diagnostic_pp <- function(pp, pn, e){
k1 <- (pp*(1-e))/(e*(1-pp))
k2 <- (pn*e)/((1-e)*(1-pn))
sen <- (k1-k1*k2)/(1-k1*k2)
sp <- (k2-k1*k2)/(1-k1*k2)
fn <- 1 - sen
fp <- 1 - sp
cat(' Sensitive :', sen, '\n', 'Specificity :', sp, 'FN :', fn, '\n', 'FP :', fp)
}
diagnostic_pp(0.28272,0.9521621,0.1)
diagnostic_pp <- function(pp, pn, e){
k1 <- (pp*(1-e))/(e*(1-pp))
k2 <- (pn*e)/((1-e)*(1-pn))
sen <- (k1-k1*k2)/(1-k1*k2)
sp <- (k2-k1*k2)/(1-k1*k2)
fn <- 1 - sen
fp <- 1 - sp
cat(' Sensitive :', sen, '\n', 'Specificity :', sp, '\n', 'FN :', fn, '\n', 'FP :', fp)
}
diagnostic_pp(0.28272,0.9521621,0.1)
source('~/TMU-GIDS/大數據統計與預測/temp.R')
