else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(1.3,4.1,1.3,2.0,121,75)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square*((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else{
p = 2*pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(1.3,4.1,1.3,2.0,121,75)
ind_t(0.98,0.95,0.026,0.025,77,161)
ind_t(0.98,0.95,0.026,0.025,77,161)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square*((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-sided'){
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = 2*pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-sided'){
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.98,0.95,0.026,0.025,77,161)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square*((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-sided'){
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = 2*pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-sided'){
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.98,0.95,0.026,0.025,77,161)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square*((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = 2*pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.98,0.95,0.026,0.025,77,161)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square*((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = 2*pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = 2*pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.98,0.95,0.026,0.025,77,161)
ind_t(0.098,0.095,0.026,0.025,77,161)
pt(0.85, 236)
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sp_square*sqrt(((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.098,0.095,0.026,0.025,77,161)
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/sqrt(sp_square)*sqrt(((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.098,0.095,0.026,0.025,77,161)
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/(sqrt(sp_square)*sqrt((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.098,0.095,0.026,0.025,77,161)
((76*(0.026)^2)+(161*(0.025)^2))/236
# Q8.c Q11.b
ind_t <- function(x1, x2, s1, s2, n1, n2){
question <- as.character(readline(prompt="Are population variances assume to be equal (y/n) ? : "))
tail <- as.character(readline(prompt='What testing tail is gonna to perform (left/right/two-tails)? :'))
if (question == 'y') {
sp_square <- (((n1-1)*s1*s1)+((n2-1)*s2*s2))/(n1+n2-2)
t0 <- (x1-x2)/(sqrt(sp_square)*sqrt((1/n1)+(1/n2)))
df=(n1+n2-2)
cat('sp square :', sp_square, '\n')
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail = TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail = FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
else{
t0 <- ((x1-x2)-0)/sqrt((s1*s1/n1)+(s2*s2/n2))
df <- ((s1*s1/n1)+(s2*s2/n2))^2/(((s1*s1/n1)^2/(n1-1))+((s2*s2/n2)^2/(n2-1)))
cat('T :', t0, '\n')
cat('df :', df, '\n')
if (tail == 'left') {
p = pt(t0, df=df, lower.tail=TRUE)
cat(' ==== Answer ====','\n')
cat('left-tail t test', '\n')
cat('P-value :', p)
}else if(tail == 'two-tails'){
p = 2*pt(t0, df=df)
cat(' ==== Answer ====','\n')
cat('two-tails t test', '\n')
cat('P-value :', p)
}else{
p = pt(t0, df=df, lower.tail=FALSE)
cat(' ==== Answer ====','\n')
cat('right-tail t test', '\n')
cat('P-value :', p)
}
}
}
ind_t(0.098,0.095,0.026,0.025,77,161)
((76*(0.026)^2)+(161*(0.025)^2))/236
0.003/(sqrt(0.000644072)*sqrt((1/77)+(1/161)))
pt(0.8549064, 236)
pt(0.8549064, 236, lower.tail = FALSE)
pt(0.8549064, 236, ncp = 0)
?p.value()
library(xlsx)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
setwd('C:/Users/Weber/Documents/GitHub/TMU-GIDS/world-happiness')
for (i in 5:9) {
data_i <- read.csv(paste('201',i,'.csv',sep = ''))
}
data[i] <- read.csv(paste('201',i,'.csv',sep = ''))
setwd("~/GitHub/TMU-GIDS/world-happiness")
for (i in 5:9) {
data[i] <- read.csv(paste('201',i,'.csv',sep = ''))
}
data_i <- read.csv(paste('201',i,'.csv',sep = ''))
data$i <- read.csv(paste('201',i,'.csv',sep = ''))
ga <- lapply(list.files(path = ".", pattern = "\\.csv"), read.csv)
View(ga)
lf <- list.files(path = ".", pattern = "\\.csv")
fn <- gsub("\\.dat", "", lf)
for (i in seq_along(lf))
assign(fn[i], read.csv(lf[i]))
View(`2015.csv`)
library(xlsx)
library(stringr)
library(dplyr)
library(tidyr)
library(magrittr)
setwd('C:/Users/Weber/Documents/GitHub/TMU-GIDS/world-happiness')
lf <- list.files(path = ".", pattern = "\\.csv")
fn <- gsub("\\.dat", "", lf)
for (i in seq_along(lf))
assign(fn[i], read.csv(lf[i]))
head(`2015.csv`)
